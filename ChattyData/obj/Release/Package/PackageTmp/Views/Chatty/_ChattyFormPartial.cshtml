@model ChattyData.Models.ChattyMessage

@{
    ViewBag.Title = "Request New";
}

@using (Html.BeginForm("DoIt", "Chatty", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if(Model != null && Model.ActionName == null)
        {

            <div class="form-group">
                @Html.LabelFor(model => model.ActionName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                        @Html.EditorFor(model => model.ActionName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ActionName, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div>@Html.HiddenFor(model => model.ActionName)</div>
        }

        @if (Model != null && Model.Source == null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Source, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Source, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Source, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div>@Html.HiddenFor(model => model.Source)</div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model != null && Model.ContentType == null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ContentType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ContentType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContentType, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div>@Html.HiddenFor(model => model.ContentType) </div>
        }
        
        @if (Model != null && Model.LastUpdated == default(DateTime))
        {
            <span>@Html.EditorFor(model => model.LastUpdated, new { htmlAttributes = new { @class = "form-control" } })</span>
        }
        else
        {
            <div>@Html.HiddenFor(model => model.LastUpdated) </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

